=== SNAPSHOT MENU / NAVIGATION ===
--- FILE: C:\FildocDev\sites\fildoc_new\app\Providers\Filament\FilamentPanelProvider.php
<?php

namespace App\Providers\Filament;

use Filament\Navigation\NavigationBuilder;
use Filament\Navigation\NavigationGroup;
use Filament\Navigation\NavigationItem;
use Filament\PanelProvider;

class FilamentPanelProvider extends PanelProvider
{
    public function panel(\Filament\Panel $panel): \Filament\Panel
    {
        return $panel
            ->default()
            ->id('admin')
            ->path('admin')
            ->pages([
                \Filament\Pages\Dashboard::class,
            ])
            ->homeUrl(fn () => auth()->check() ? route('filament.admin.pages.dashboard') : route('filament.admin.auth.login'))
            ->navigation(function (NavigationBuilder $navigation): NavigationBuilder {
                return $navigation->groups([
                    NavigationGroup::make('Tableau de bord')->items([
                        NavigationItem::make('Actions rapides')
                            ->url('/admin/dashboard/actions-rapides'),
                        NavigationItem::make('Indicateurs clés')
                            ->url('/admin/dashboard/indicateurs'),
                    ]),
                    NavigationGroup::make('Collaborateurs')->items([
                        NavigationItem::make('Liste des Collaborateurs')
                            ->url('/admin/collaborateurs'),
                    ]),
                    NavigationGroup::make('Temps de travail & absences')->items([
                        NavigationItem::make('Congés & absences')
                            ->url('/admin/absences'),
                    ]),
                    NavigationGroup::make('Paie')->items([
                        NavigationItem::make('Clôturer la paie')
                            ->url('/admin/paie/cloturer'),
                        NavigationItem::make('Éléments de rémunération')
                            ->url('/admin/paie/elements-remuneration'),
                        NavigationItem::make('Paramètres & paiements')
                            ->url('/admin/paie/parametres-paiements'),
                        NavigationItem::make('Déclarations sociales')
                            ->url('/admin/paie/declarations-sociales'),
                    ]),
                    NavigationGroup::make('Documents')->items([
                        NavigationItem::make('Contrats & fiches de paie')
                            ->url('/admin/documents/contrats-paie'),
                        NavigationItem::make('Exports')
                            ->url('/admin/documents/exports'),
                    ]),
                    NavigationGroup::make('IA de gestion')->items([
                        NavigationItem::make('Assistant paie')
                            ->url('/admin/ia/assistant'),
                        NavigationItem::make('Modification intelligente')
                            ->url('/admin/ia/modification-intelligente'),
                        NavigationItem::make('Vérifications automatiques')
                            ->url('/admin/ia/verifications-auto'),
                        NavigationItem::make('Conseils RH')
                            ->url('/admin/ia/conseils-rh'),
                    ]),
                    NavigationGroup::make('Structure & Paramètres')->items([
                        NavigationItem::make('Établissement')
                            ->url('/admin/structure/etablissement'),
                        NavigationItem::make('Accès & notifications')
                            ->url('/admin/structure/acces-notifications'),
                        NavigationItem::make('Intégrations')
                            ->url('/admin/structure/integrations'),
                        NavigationItem::make('Imports multiples')
                            ->url('/admin/structure/imports-multiples'),
                    ]),
                ]);
            });
    }
}

--- EOF
--- FILE: C:\FildocDev\sites\fildoc_new\app\Filament\Resources\EmployeeResource.php
<?php

namespace App\Filament\Resources;

use App\Filament\Resources\EmployeeResource\Pages;
use App\Filament\Resources\EmployeeResource\RelationManagers;
use App\Models\Employee;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class EmployeeResource extends Resource
{
    protected static ?string $model = Employee::class;

    protected static ?string $navigationIcon = 'heroicon-o-user-group';
    protected static ?string $navigationGroup = 'RH';
    protected static ?string $navigationLabel = 'Employés';
    protected static ?string $pluralModelLabel = 'Employés';
    protected static ?string $modelLabel = 'Employé';

    public static function form(Form $form): Form
    {
        return $form->schema([
            Forms\Components\TextInput::make('first_name')
                ->label('Prénom')
                ->placeholder('Saisir le prénom')
                ->required()
                ->maxLength(100),

            Forms\Components\TextInput::make('last_name')
                ->label('Nom')
                ->placeholder('Saisir le nom')
                ->required()
                ->maxLength(100),

            Forms\Components\TextInput::make('email')
                ->label('E-mail')
                ->placeholder('prenom.nom@entreprise.fr')
                ->email()
                ->required()
                ->unique(ignoreRecord: true),

            Forms\Components\DatePicker::make('hire_date')
                ->label("Date d'embauche")
                ->native(false),

            Forms\Components\Select::make('contract_type')
                ->label('Type de contrat')
                ->options([
                    'CDI' => 'CDI',
                    'CDD' => 'CDD',
                    'Freelance' => 'Freelance',
                    'Stage' => 'Stage',
                ])
                ->native(false),

            Forms\Components\TextInput::make('base_salary')
                ->label('Salaire de base (€)')
                ->numeric()
                ->prefix('€')
                ->rule('decimal:0,2'),

            Forms\Components\TextInput::make('weekly_hours')
                ->label('Heures / semaine')
                ->numeric()
                ->minValue(1)
                ->maxValue(48),

            Forms\Components\TextInput::make('matricule')
                ->label('Matricule')
                ->placeholder('EMP-00001')
                ->unique(ignoreRecord: true),

            Forms\Components\Textarea::make('meta.note')
                ->label('Notes')
                ->rows(3)
                ->columnSpanFull(),
        ])->columns(2);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('last_name')->label('Nom')->searchable()->sortable(),
                Tables\Columns\TextColumn::make('first_name')->label('Prénom')->searchable()->sortable(),
                Tables\Columns\TextColumn::make('email')->label('E-mail')->searchable(),
                Tables\Columns\TextColumn::make('contract_type')->label('Contrat')->badge(),
                Tables\Columns\TextColumn::make('hire_date')->label("Date d'embauche")->date(),
                Tables\Columns\TextColumn::make('base_salary')->label('Salaire (€)')->money('EUR', true),
                Tables\Columns\TextColumn::make('weekly_hours')->label('Heures/sem.'),
                Tables\Columns\TextColumn::make('matricule')->label('Matricule')->searchable(),
                Tables\Columns\TextColumn::make('created_at')->label('Créé')->since(),
            ])
            ->filters([])
            ->actions([
                Tables\Actions\EditAction::make()->label('Modifier'),
                Tables\Actions\DeleteAction::make()->label('Supprimer'),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make()->label('Supprimer la sélection'),
                ]),
            ]);
    }
    
    public static function getRelations(): array
    {
        return [
            //
        ];
    }
    
    public static function getPages(): array
    {
        return [
            'index'  => Pages\ListEmployees::route('/'),
            'create' => Pages\CreateEmployee::route('/creer'),
            'edit'   => Pages\EditEmployee::route('/{record}/modifier'),
        ];
    }    
}

--- EOF
--- FILE: C:\FildocDev\sites\fildoc_new\app\Filament\Resources\LeaveResource.php
<?php

namespace App\Filament\Resources;

use App\Filament\Resources\LeaveResource\Pages;
use App\Filament\Resources\LeaveResource\RelationManagers;
use App\Models\Leave;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class LeaveResource extends Resource
{
    protected static ?string $model = Leave::class;

    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\TextInput::make('employee_id')
                    ->required()
                    ->numeric(),
                Forms\Components\TextInput::make('type')
                    ->required()
                    ->maxLength(255)
                    ->default('CP'),
                Forms\Components\DatePicker::make('start_date')
                    ->required(),
                Forms\Components\DatePicker::make('end_date')
                    ->required(),
                Forms\Components\TextInput::make('days')
                    ->numeric(),
                Forms\Components\TextInput::make('status')
                    ->required()
                    ->maxLength(255)
                    ->default('pending'),
                Forms\Components\Textarea::make('reason')
                    ->columnSpanFull(),
                Forms\Components\TextInput::make('meta'),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('employee_id')
                    ->numeric()
                    ->sortable(),
                Tables\Columns\TextColumn::make('type')
                    ->searchable(),
                Tables\Columns\TextColumn::make('start_date')
                    ->date()
                    ->sortable(),
                Tables\Columns\TextColumn::make('end_date')
                    ->date()
                    ->sortable(),
                Tables\Columns\TextColumn::make('days')
                    ->numeric()
                    ->sortable(),
                Tables\Columns\TextColumn::make('status')
                    ->searchable(),
                Tables\Columns\TextColumn::make('created_at')
                    ->dateTime()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
                Tables\Columns\TextColumn::make('updated_at')
                    ->dateTime()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ])
            ->emptyStateActions([
                Tables\Actions\CreateAction::make(),
            ]);
    }
    
    public static function getRelations(): array
    {
        return [
            //
        ];
    }
    
    public static function getPages(): array
    {
        return [
            'index' => Pages\ListLeaves::route('/'),
            'create' => Pages\CreateLeave::route('/create'),
            'edit' => Pages\EditLeave::route('/{record}/edit'),
        ];
    }    
}

--- EOF
--- FILE: C:\FildocDev\sites\fildoc_new\app\Filament\Resources\EmployeeResource\Pages\CreateEmployee.php
<?php

namespace App\Filament\Resources\EmployeeResource\Pages;

use App\Filament\Resources\EmployeeResource;
use Filament\Actions;
use Filament\Resources\Pages\CreateRecord;

class CreateEmployee extends CreateRecord
{
    protected static string $resource = EmployeeResource::class;
}

--- EOF
--- FILE: C:\FildocDev\sites\fildoc_new\app\Filament\Resources\EmployeeResource\Pages\EditEmployee.php
<?php

namespace App\Filament\Resources\EmployeeResource\Pages;

use App\Filament\Resources\EmployeeResource;
use Filament\Actions;
use Filament\Resources\Pages\EditRecord;

class EditEmployee extends EditRecord
{
    protected static string $resource = EmployeeResource::class;

    protected function getHeaderActions(): array
    {
        return [
            Actions\DeleteAction::make(),
        ];
    }
}

--- EOF
--- FILE: C:\FildocDev\sites\fildoc_new\app\Filament\Resources\EmployeeResource\Pages\ListEmployees.php
<?php

namespace App\Filament\Resources\EmployeeResource\Pages;

use App\Filament\Resources\EmployeeResource;
use Filament\Actions;
use Filament\Resources\Pages\ListRecords;

class ListEmployees extends ListRecords
{
    protected static string $resource = EmployeeResource::class;

    protected function getHeaderActions(): array
    {
        return [
            Actions\CreateAction::make(),
        ];
    }
}

--- EOF
--- FILE: C:\FildocDev\sites\fildoc_new\app\Filament\Resources\LeaveResource\Pages\CreateLeave.php
<?php

namespace App\Filament\Resources\LeaveResource\Pages;

use App\Filament\Resources\LeaveResource;
use Filament\Actions;
use Filament\Resources\Pages\CreateRecord;

class CreateLeave extends CreateRecord
{
    protected static string $resource = LeaveResource::class;
}

--- EOF
--- FILE: C:\FildocDev\sites\fildoc_new\app\Filament\Resources\LeaveResource\Pages\EditLeave.php
<?php

namespace App\Filament\Resources\LeaveResource\Pages;

use App\Filament\Resources\LeaveResource;
use Filament\Actions;
use Filament\Resources\Pages\EditRecord;

class EditLeave extends EditRecord
{
    protected static string $resource = LeaveResource::class;

    protected function getHeaderActions(): array
    {
        return [
            Actions\DeleteAction::make(),
        ];
    }
}

--- EOF
--- FILE: C:\FildocDev\sites\fildoc_new\app\Filament\Resources\LeaveResource\Pages\ListLeaves.php
<?php

namespace App\Filament\Resources\LeaveResource\Pages;

use App\Filament\Resources\LeaveResource;
use Filament\Actions;
use Filament\Resources\Pages\ListRecords;

class ListLeaves extends ListRecords
{
    protected static string $resource = LeaveResource::class;

    protected function getHeaderActions(): array
    {
        return [
            Actions\CreateAction::make(),
        ];
    }
}

--- EOF
